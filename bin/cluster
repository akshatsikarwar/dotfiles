#!/bin/bash

set -e

function build {
  DIR=$(mktemp -d)
  cp $HOME/comdb2.tar.gz $DIR/
  cp $HOME/akdb.tar.gz $DIR/
  cp $HOME/.ssh/id_rsa.pub $DIR/
  pushd $DIR
  cat > Dockerfile <<EOF
FROM debian:stretch
RUN apt update
RUN apt install -y          \
    gdb                     \
    libevent-2.0            \
    libevent-pthreads-2.0   \
    libprotobuf-c1          \
    libreadline7            \
    libsqlite3-0            \
    libunwind8              \
    netcat-openbsd          \
    openssl                 \
    tzdata                  \
    vim
RUN echo "set editing-mode vi"                  >> /root/.inputrc
RUN echo "set editing-mode vi"                  >> /root/.inputrc
RUN echo "set keymap vi-command"                >> /root/.inputrc
RUN echo "Control-l: clear-screen"              >> /root/.inputrc
RUN echo "set keymap vi-insert"                 >> /root/.inputrc
RUN echo "Control-l: clear-screen"              >> /root/.inputrc
RUN echo "PATH=\$PATH:/opt/bb/bin:$HOME/bin"    >> /root/.bashrc
COPY comdb2.tar.gz /opt/
RUN tar xzf /opt/comdb2.tar.gz --strip 1
COPY akdb.tar.gz /opt/
RUN tar xzf /opt/akdb.tar.gz -C /opt/bb/var/cdb2
RUN rm /opt/*.gz
EOF
  docker build -t sikarwar:comdb2 .
  popd
  rm -rf $DIR
}

function run {
  n=$1
  for((i=1;i<=$n;++i)); do
      docker run -it -d --privileged --rm --network host --network comdb2 -v $HOME/bin:$HOME/bin -v $HOME/src:$HOME/src --name c${i} --hostname c${i} sikarwar:comdb2 /opt/bb/bin/pmux -f
  done
}

if [[ "$1" == "build" ]]; then
  build
elif [[ "$1" == "run" ]]; then
  run $2
else
  echo "Usage: cluster <build|run #nodes>"
fi
