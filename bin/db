#!/usr/bin/env bash
export HOSTNAME=$(hostname)
tunables=()
while [[ $# -gt 0 ]] ; do
	key="$1"
	case $key in
	-d) debug="yes"
	;;
	-e) encrypt="yes"
	;;
	-s) start="yes"
	;;
	-i) init="yes"
	;;
	-v) valgrind="yes"
	;;
	-n) name="$2"
	shift
	;;
	-x) set -x
	;;
	--tunable) tunables+=(--tunable "$2")
	shift
	;;
	*) pfx="$1"
	;;
	esac
	shift
done

name=${name:-akdb}
tunables+=(--pidfile /tmp/$name.pid)

if [[ $(uname) == "Darwin" ]]; then
	DBG="lldb"
	DBG_RUN="--"
	DBG_START="--"
else
	DBG="gdb -q"
	DBG_RUN="-ex run --arg"
	DBG_START="-ex start --arg"
fi

if [[ $pfx == "bb" ]]; then
	comdb2="/opt/bb/bin/comdb2"
else
	pfx="$($HOME/bin/g --print $pfx)"
	[[ -d $pfx/ninja ]] && pfx=$pfx/ninja
	[[ -d $pfx/build ]] && pfx=$pfx/build
	comdb2="${pfx}/db/comdb2"
fi

[[ ! -x ${comdb2} ]] && echo 'comdb2 binary?' && exit 1

if [[ -n $init ]] ; then
	dir=/opt/bb/var/cdb2/$name
	[[ -d $dir ]] && rm -rf $dir
	mkdir -p $dir
	mkdir -p /opt/bb/etc/cdb2/config.d
	#tunables+=(--tunable "allow_lua_print")
	#tunables+=(--tunable "crypto $HOME/.local/db/comdb2/passwd")
	#tunables+=(--tunable "dtastripe 16")
	#tunables+=(--tunable "enable_snapshot_isolation")
	#tunables+=(--tunable "enable_sql_stmt_caching all")
	#tunables+=(--tunable "libevent_rte_only on")
	#tunables+=(--tunable "logmsg level debug")
	#tunables+=(--tunable "nowatch")
	#tunables+=(--tunable "perfect_ckp 0")
	#tunables+=(--tunable "setattr directio 0")
	tunables+=(--tunable "allow_lua_print")
	tunables+=(--tunable "nowatch")
	tunables+=(--tunable "timer_pstack_interval 0")
	tunables+=(--tunable "timer_warn_interval 0")
	tunables+=(--tunable "disable_sql_dlmalloc 1")
	cat > /opt/bb/etc/cdb2/config.d/$name.cfg <<-EOF
		comdb2_config:default_type=local
		comdb2_config: allow_pmux_route=true
	EOF
	if [[ -n $encrypt ]]; then
		figlet secure
		tunables+=(--tunable "ssl_client_mode REQUIRE")
		openssl ecparam -genkey -name prime256v1 -noout -out $dir/server.key
		openssl req -x509 -new -nodes -key $dir/server.key -subj "/CN=$name" -out $dir/server.crt
	fi
	if [[ -n $debug ]] ; then
		echo $DBG $DBG_RUN $comdb2 "${tunables[@]}" --create $name
		exec $DBG $DBG_RUN $comdb2 "${tunables[@]}" --create $name
	else
		echo $comdb2 "${tunables[@]}" --create $name
		exec $comdb2 "${tunables[@]}" --create $name
	fi
elif [[ -n $valgrind ]] ; then
	echo valgrind -q --leak-check=full --track-origins=yes $comdb2 "${tunables[@]}" $name
	exec valgrind -q --leak-check=full --track-origins=yes $comdb2 "${tunables[@]}" $name
elif [[ -n $debug ]] ; then
	echo $DBG $DBG_RUN $comdb2 "${tunables[@]}" $name
	exec $DBG $DBG_RUN $comdb2 "${tunables[@]}" $name
elif [[ -n $start ]] ; then
	echo $DBG $DBG_START $comdb2 "${tunables[@]}" $name
	exec $DBG $DBG_START $comdb2 "${tunables[@]}" $name
else
	echo $comdb2 "${tunables[@]}" $name
	exec $comdb2 "${tunables[@]}" $name
fi

# vim: set noet:
