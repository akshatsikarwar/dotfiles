#!/usr/bin/env bash
shopt -s nocasematch

SRC="$HOME/src"
COMDB2="$SRC/comdb2"
DEFAULT="$COMDB2/main"

DIRS=()
DIRS+=("$COMDB2")
DIRS+=("$SRC")
DIRS+=("$HOME")
DIRS+=("/opt/bb/var/cdb2")

function usage() {
echo "Usage: g [-h] [DIRECTORY]
Go to directory matching regex [DIRECTORY].
Following locations are searched to find match:"
for DIR in "${DIRS[@]}"
do
	echo "$DIR"
done
echo "With no arguments, change directory to: $DEFAULT

  -h,  --help    display this help and exit

Tools by Akshat Sikarwar [https://github.com/akshatsikarwar]"
}

function find_dir {
	if [[ -z "$TARGET" ]]; then
		TARGET=$DEFAULT
	elif [[ "$TARGET" == "data" ]]; then
		TARGET=/opt/bb/var/cdb2
		return
	elif [[ "$TARGET" == "bb" ]]; then
		TARGET=/opt/bb
		return
	elif [[ "$TARGET" == "test" ]] || [[ "$TARGET" == "tests" ]] || [[ "$TARGET" == "logs" ]]; then
		TARGET=/opt/bb/tmp/testdir/logs
		return
	fi
	for DIR in "${DIRS[@]}"
	do
		if [[ ! -d "$DIR" ]]; then
			continue
		fi
		for d in `ls "$DIR"`; do
			if [[ -d "$DIR/$d" ]] && [[ "$d" =~ "$TARGET" ]]; then
				TARGET="$DIR/$d"
				return
			fi
		done
	done
}

function find_and_go() {
	find_dir
	print_and_go
}

function print_and_go() {
	[[ -d $TARGET ]] && echo "$TARGET"
	if [[ -z $PRINT_ONLY ]]; then
		cd $TARGET
	fi
}

if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
	usage
fi

if [[ "$1" == "--print" ]]; then
	shift
	PRINT_ONLY=1
fi

if [[ "$1" == "-p" ]]; then
    shift
    TARGET="$@"
    if [[ -z "$TARGET" ]]; then
        DEFAULT="$SRC/bb-plugins/main"
    else
        DEFAULT="$SRC/bb-plugins"
    fi
    DIRS=("$DEFAULT")
else
    TARGET="$@"
fi
find_and_go
TARGET=
